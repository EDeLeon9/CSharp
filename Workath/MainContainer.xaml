<Window x:Class="Workath.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Workath"
        xmlns:controls="clr-namespace:Workath.Controls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="Workath" WindowStartupLocation="CenterScreen" Background="{StaticResource DarkBGColor}"
        Height="900" Width="1700" MinHeight="500" MinWidth="750" MouseLeftButtonDown="Window_MouseLeftButtonDown" Closing="Window_Closing" ContentRendered="Window_ContentRendered">
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/DataGridComboBoxTemplate.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <CollectionViewSource x:Key="WorkStampsViewSource" Source="{Binding GridWorkStamps}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="DateText"/>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>

            <Style TargetType="Button" BasedOn="{StaticResource BrownButtonStyle}"/>
        </ResourceDictionary>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <!--Para quitar los bordes y dejar funcional las animaciones de la ventana-->
        <!--ResizeBorderThickness="7" da 7px de borde dentro de la ventana para poder hacer Rezise-->
        <!--CaptionHeight="0" quita la barra invisible de arriba para que permite presionar los botones de la esquina (pero no permite hacer doble clic para maximizar/restaurar, por eso
        se usa CaptionHeight mayor a 0, pero agregando WindowChrome.IsHitTestVisibleInChrome="True" en el control de los botones de la esquina)-->
        <!--UseAeroCaptionButtons="False" quita los botones predeterminados que quedaron invisibles para que se puedan usar los propios (porque funcionaban aunque no se vieran)-->
        <WindowChrome ResizeBorderThickness="7" CaptionHeight="35" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>

    <Window.DataContext>
        <local:MainViewModel x:Name="dtcMainViewModel"/>
    </Window.DataContext>

    <Grid>
        <!--www.codeproject.com/Articles/36468/WPF-NotifyIcon-2-->
        <tb:TaskbarIcon x:Name="tbiTaskbarIcon" NoLeftClickDelay="True" IconSource="/Resources/workstamp_isopen_icon.ico" ToolTipText="Open Work Stamp" LeftClickCommand="{Binding TaskbarIconClickCommand}">
            <!--Se usa un bool en lugar de un Visibility ya que podría agregar o quitar Setters del style en el futuro-->
            <tb:TaskbarIcon.Style>
                <Style TargetType="tb:TaskbarIcon">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WorkStampIsOpen}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </tb:TaskbarIcon.Style>
        </tb:TaskbarIcon>

        <controls:WindowButtons x:Name="ctrlWindowButtons" VerticalAlignment="Top" HorizontalAlignment="Right"/>

        <Grid Margin="17,14,17,17">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Image Source="/Resources/workath_logo_24px.png" VerticalAlignment="Center" Margin="0,0,0,2"/>
                <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,-2,0,0" Width="100" Text="Workath" FontSize="22" FontWeight="Bold" Foreground="White"/>
            </StackPanel>

            <Grid Grid.Row="1" Margin="0,2,0,0" Background="{StaticResource LightBGColor}">
                <Grid Margin="14">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="13"/>
                        <RowDefinition Height="26"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Separator Grid.Row="0"/>

                    <DockPanel Grid.Row="2" >
                        <Button DockPanel.Dock="Right" FontSize="14" HorizontalAlignment="Right" Width="70" Content="Finish" Margin="10,0,0,10" Command="{Binding FinishWorkStampCommand}" CommandParameter="{StaticResource BoolTrue}"/>

                        <Separator DockPanel.Dock="Right" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="0,0,0,10" Background="#A0A0A0" />

                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="0,-10,0,4" Text="Generate Work Stamp:" VerticalAlignment="Bottom" FontSize="16"/>

                            <ItemsControl DockPanel.Dock="Left" ItemsSource="{Binding ProjectsForStamping}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!--Se define ElementName en el Binding del Command ya que el DataContext dentro del ItemsControl es su ItemsSource, que es ProjectCol y se quiere usar dtcMainViewModel-->
                                        <Button FontSize="18" Height="35" Margin="0,0,10,10" Command="{Binding Path=GenerateNewWorkStampCommand, ElementName=dtcMainViewModel}" CommandParameter="{Binding IdProject}">
                                            <Button.Content>
                                                <TextBlock Text="{Binding ProjectName}" Margin="7,0"/>
                                            </Button.Content>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </DockPanel>
                    
                    <Separator Grid.Row="3" VerticalAlignment="Top"/>

                    <Grid Grid.Row="4">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Year: " VerticalAlignment="Center" FontSize="15"/>
                            <ComboBox x:Name="cboYear" Width="70" VerticalContentAlignment="Center" FontSize="13" ItemsSource="{Binding YearFilters}" SelectedItem="{Binding FilterYear}"/>

                            <TextBlock Text="Month: " Margin="20,0,0,0" VerticalAlignment="Center" FontSize="15"/>
                            <ComboBox x:Name="cboMonth" Width="100" VerticalContentAlignment="Center" FontSize="13" ItemsSource="{Binding MonthFilters}" SelectedItem="{Binding FilterMonth}"/>

                            <TextBlock Text="Project: " Margin="20,0,0,0" VerticalAlignment="Center" FontSize="15"/>
                            <ComboBox x:Name="cboProject" Width="220" VerticalContentAlignment="Center" FontSize="13" ItemsSource="{Binding ProjectFilters}" DisplayMemberPath="ProjectName" SelectedItem="{Binding FilterProject}"/>
                        </StackPanel>

                        <Button x:Name="btnRefresh" Content="Refresh" HorizontalAlignment="Right" Width="70" FontSize="14" Command="{Binding LoadWorkStampsCommand}" CommandParameter="{StaticResource BoolTrue}"/>
                    </Grid>

                    <!--Virtualization se refiere a que las filas no se van a dibujar hasta que se haga scroll a donde están, así mejorando el performance al momento de cargar los datos de la tabla (se reduce el performance del scrolling)-->
                    <DataGrid x:Name="grdWorkStamps" Grid.Row="6" HeadersVisibility="Column" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" SelectionMode="Single" AutoGenerateColumns="False" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="Gray"
                              VirtualizingPanel.IsVirtualizingWhenGrouping="True" EnableRowVirtualization="True" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" 
                              IsReadOnly="{Binding SelectedWorkStamp.IdWorkStamp, Converter={StaticResource ZeroIsTrueConverter}}" ItemsSource="{Binding Source={StaticResource WorkStampsViewSource}}" SelectedItem="{Binding SelectedWorkStamp}" 
                              PreparingCellForEdit="grdWorkStamps_PreparingCellForEdit" ClipboardCopyMode="None"
                              RowHeaderWidth="0">
                        <!--Se coloca RowHeaderWidth="0" para corregir un bug cuando el scrollbar está al final y se actualiza la tabla haciendo que salgan filas descuadradas-->

                        <DataGrid.Resources>
                            <Style x:Key="CenteredHeader" TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="HourRateHeader" TargetType="DataGridColumnHeader" BasedOn="{StaticResource CenteredHeader}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{Binding Path=., Converter={StaticResource HeaderConverter}}" TextWrapping="Wrap" TextAlignment="Center"/>
                                                <TextBlock Text="{Binding Path=., Converter={StaticResource HeaderConverter}, ConverterParameter={StaticResource BoolTrue}}" TextAlignment="Center" FontSize="11"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="DefaultCellStyle" TargetType="DataGridCell">
                                <EventSetter Event="KeyDown" Handler="DataGridCell_PreviewKeyDown"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding InvalidDates}" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkBGColor}"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource DarkBGColor}"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding EditingSelectedWorkStamp, Source={x:Reference dtcMainViewModel}}" Value="True"/>
                                            <!--Esto es como usar solo Trigger en vez de DataTrigger-->
                                            <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Black"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="Black"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding EditingSelectedWorkStamp, Source={x:Reference dtcMainViewModel}}" Value="True"/>
                                            <!--Esto es como usar solo Trigger en vez de DataTrigger-->
                                            <Condition Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="White"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="RightTextStyle" TargetType="DataGridCell" BasedOn="{StaticResource DefaultCellStyle}">
                                <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IdWorkStamp, Converter={StaticResource ZeroIsTrueConverter}}" Value="False">
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <!--Se usa "Source={x:Reference..." en lugar de "ElementName=..." ya que el ContextMenu no está dentro del VisualTree principal-->
                                                <!--Usa el dtcMainViewModel como DataContext y no el ItemSource del DataGrid-->
                                                <ContextMenu DataContext="{Binding Source={x:Reference dtcMainViewModel}}">
                                                    <MenuItem Padding="0,5" Header="Show work stamp ID" Command="{Binding ShowWorkStampIdCommand}" CommandParameter="{Binding SelectedWorkStamp.IdWorkStamp}">
                                                        <MenuItem.Icon>
                                                            <!--Para usar imágenes hay que colocar la propiedad del archivo "Acción de compilación" como "Recurso" luego de agregarla al proyecto-->
                                                            <Image Source="/Resources/key.png"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <Separator/>
                                                    <MenuItem Padding="0,5" Command="{Binding MergeWorkStampCommand}" CommandParameter="{Binding SelectedWorkStamp}">
                                                        <MenuItem.Header>
                                                            <StackPanel>
                                                                <TextBlock Text="Merge with the previous work stamp"/>
                                                                <TextBlock Text="with same project and day"/>
                                                            </StackPanel>
                                                        </MenuItem.Header>
                                                        <MenuItem.Icon>
                                                            <!--Para usar imágenes hay que colocar la propiedad del archivo "Acción de compilación" como "Recurso" luego de agregarla al proyecto-->
                                                            <Image Source="/Resources/merge.png"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <Separator/>
                                                    <MenuItem Padding="0,5" Header="Delete work stamp" Command="{Binding DeleteWorkStampCommand}" CommandParameter="{Binding SelectedWorkStamp}">
                                                        <MenuItem.Icon>
                                                            <!--Para usar imágenes hay que colocar la propiedad del archivo "Acción de compilación" como "Recurso" luego de agregarla al proyecto-->
                                                            <Image Source="/Resources/delete.png"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IdWorkStamp}" Value="0">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontWeight" Value="Medium"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Visibility="Collapsed" Header="Id" HeaderStyle="{StaticResource CenteredHeader}" Width="35" IsReadOnly="True" Binding="{Binding IdWorkStamp}"/>

                            <!--DisplayMemberPath es lo que se muestra del ItemSource-->
                            <!--SelectedValuePath es lo que se toma del ItemSource y se asigna a SelectedValue-->
                            <!--Se usa SelectedValueBinding y no SelectedItemBinding porque el Item seria un WorkStamp (del DataContext que es el ItemSource del DataGrid) y no hay Project dentro de un Workstamp pero si hay IdProject-->
                            <!--Si se consulta SelectedItem será el Item del ItemsSource (por eso no existe SelectedItemPath)-->
                            <!--Se usa "Source={x:Reference..." en lugar de "ElementName=..." ya que los Headers no están dentro del VisualTree principal-->
                            <DataGridComboBoxColumn Header="Project" HeaderStyle="{StaticResource CenteredHeader}" Width="0.9*" IsReadOnly="False" ItemsSource="{Binding Path=ProjectsForEditing, Source={x:Reference dtcMainViewModel}}" SelectedValuePath="IdProject" DisplayMemberPath="ProjectName" SelectedValueBinding="{Binding IdProject}" EditingElementStyle="{StaticResource DataGridComboBoxStyle}" CellStyle="{StaticResource DefaultCellStyle}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Margin" Value="2,-1"/>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                            </DataGridComboBoxColumn>

                            <!--<DataGridTextColumn Header="Start Time" Width="0.75*" IsReadOnly="True" Binding="{Binding Path=StartTime, StringFormat='dd/MM/yyyy h:mm tt'}" CellStyle="{StaticResource RightTextStyle}"/>-->
                            <DataGridTemplateColumn Header="Start Time" HeaderStyle="{StaticResource CenteredHeader}" Width="0.75*" IsReadOnly="False" CellStyle="{StaticResource RightTextStyle}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=StartTime, Converter={StaticResource DateTimeConverter}}" Padding="2,0"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <local:DateTimeTextBoxCell Text="{Binding Path=StartTime, Converter={StaticResource DateTimeConverter}}" BorderThickness="0"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <!--<DataGridTextColumn Header="End Time" Width="0.75*" IsReadOnly="True" Binding="{Binding Path=EndTime, StringFormat='dd/MM/yyyy h:mm tt'}" CellStyle="{StaticResource RightTextStyle}"/>-->
                            <DataGridTemplateColumn Header="End Time" HeaderStyle="{StaticResource CenteredHeader}" Width="0.75*" IsReadOnly="False" CellStyle="{StaticResource RightTextStyle}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=EndTime, Converter={StaticResource DateTimeConverter}}" Padding="2,0"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <local:DateTimeTextBoxCell Text="{Binding Path=EndTime, Converter={StaticResource DateTimeConverter}}" BorderThickness="0"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <!--<DataGridTextColumn Header="Working Time" Width="0.35*" IsReadOnly="True" Binding="{Binding Path=WorkingTime, StringFormat='d\\.hh\\:mm'}" CellStyle="{StaticResource RightTextStyle}"/>-->
                            <DataGridTextColumn Header="Working Time" HeaderStyle="{StaticResource CenteredHeader}" Width="0.35*" IsReadOnly="True" Binding="{Binding Path=WorkingTime, Converter={StaticResource TimeSpanConverter}}" CellStyle="{StaticResource RightTextStyle}"/>

                            <DataGridTextColumn Header="Description" HeaderStyle="{StaticResource CenteredHeader}" Width="4*" IsReadOnly="False" Binding="{Binding Path=Description}" CellStyle="{StaticResource DefaultCellStyle}"/>

                            <!--Se usa "Source={x:Reference..." en lugar de "ElementName=..." ya que los Headers no están dentro del VisualTree principal-->
                            <DataGridTextColumn Header="{Binding Path=HourRateHeaders[0], Source={x:Reference dtcMainViewModel}}" HeaderStyle="{StaticResource HourRateHeader}" Width="0.5*" IsReadOnly="True" Binding="{Binding Base1Income}" CellStyle="{StaticResource RightTextStyle}"/>

                            <DataGridTextColumn Header="{Binding Path=HourRateHeaders[1], Source={x:Reference dtcMainViewModel}}" HeaderStyle="{StaticResource HourRateHeader}" Width="0.5*" IsReadOnly="True" Binding="{Binding Base2Income}" CellStyle="{StaticResource RightTextStyle}"/>

                            <DataGridTextColumn Header="{Binding Path=HourRateHeaders[2], Source={x:Reference dtcMainViewModel}}" HeaderStyle="{StaticResource HourRateHeader}" Width="0.5*" IsReadOnly="True" Binding="{Binding Base3Income}" CellStyle="{StaticResource RightTextStyle}"/>

                            <DataGridTextColumn Header="{Binding Path=HourRateHeaders[3], Source={x:Reference dtcMainViewModel}}" HeaderStyle="{StaticResource HourRateHeader}" Width="0.5*" IsReadOnly="True" Binding="{Binding Base4Income}" CellStyle="{StaticResource RightTextStyle}"/>
                        </DataGrid.Columns>

                        <DataGrid.GroupStyle>
                            <GroupStyle>
                                <!--Definir GroupStyle.Panel hace que no se inicie el DataGrid con las columnas encogidas-->
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <DataGridRowsPresenter/>
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="GroupItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="GroupItem">
                                                    <Expander IsExpanded="True" BorderThickness="0" Margin="0,5,0,0">
                                                        <Expander.Header>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                                            </StackPanel>
                                                        </Expander.Header>
                                                        <Expander.Content>
                                                            <Border BorderBrush="Gray" BorderThickness="0,1,0,0">
                                                                <ItemsPresenter/>
                                                            </Border>
                                                        </Expander.Content>
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </DataGrid.GroupStyle>
                    </DataGrid>
                    <StackPanel Grid.Row="8" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <TextBlock Text="Work Stamps Count:" FontSize="14" />
                        <TextBlock Text="{Binding WorkStampCount}" FontSize="14" Margin="5,0,0,0"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
